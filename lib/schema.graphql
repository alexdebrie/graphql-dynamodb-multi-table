type Comment {
	id: ID!
	username: String!
	content: String!
	publishDate: AWSDateTime!
}

type CommentConnection {
	cursor: String
	comments: [Comment]
}

input CreateCommentInput {
	postId: String!
	username: String!
	publishDate: AWSDateTime
	content: String!
}

input CreatePostInput {
	siteId: String!
	title: String!
	publishDate: AWSDateTime
	content: String!
}

input CreateSiteInput {
	name: String
	domain: String!
}

type Post {
	id: ID!
	siteId: String!
	title: String!
	publishDate: AWSDateTime!
	content: String!
	comments(num: Int, after: String): CommentConnection!
}

type PostConnection {
	cursor: String
	posts: [Post]
}

type Site {
	id: ID!
	name: String!
	domain: String!
	posts(num: Int, after: String): PostConnection!
}

type Mutation {
	createSite(input: CreateSiteInput): Site
	createPost(input: CreatePostInput): Post
	createComment(input: CreateCommentInput): Comment
}

type Query {
	getSite(domain: String!): Site
	getPostsForSite(siteId: String!, num: Int, after: String): PostConnection
}

schema {
	query: Query
	mutation: Mutation
}